import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:frontend_form/providers/locale_provider.dart';
import 'package:frontend_form/providers/providers.dart';
import 'package:frontend_form/screens/games/screens.dart';
import 'package:frontend_form/theme/theme.dart';
import 'package:frontend_form/widgets/scaled_widget.dart';
import 'package:provider/provider.dart';

import 'generated/l10n.dart'; // This is generated by Flutter based on your ARB files
import 'package:flutter_localizations/flutter_localizations.dart';

import 'package:frontend_form/screens/screens.dart';
import 'package:frontend_form/services/services.dart';

Future main() async {
  WidgetsFlutterBinding.ensureInitialized();
  ByteData data =
      await PlatformAssetBundle().load('assets/ca/lets-encrypt-r3.pem');
  SecurityContext.defaultContext
      .setTrustedCertificatesBytes(data.buffer.asUint8List());
  SystemChrome.setPreferredOrientations([
    DeviceOrientation.portraitUp,
    DeviceOrientation.portraitDown,
  ]).then((_) {
    runApp(const AppState());
  });
}

class AppState extends StatelessWidget {
  const AppState({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (context) {
          return FormService();
        }),
        ChangeNotifierProvider(create: (context) {
          return PatientProvider();
        }),
        ChangeNotifierProvider(create: (context) {
          return DatabaseService();
        }),
        ChangeNotifierProvider(create: (context) {
          return TestProvider();
        }),
        ChangeNotifierProvider(create: (context) {
          return LocaleProvider();
        }),
        ChangeNotifierProvider(create: (context) {
          return CardProvider();
        }),
      ],
      child: const MyApp(),
    );
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) {
    return Consumer<LocaleProvider>(builder: (context, localeProvider, child) {
      return ScaledWidget(
        child: MaterialApp(
          debugShowCheckedModeBanner: false,
          title: 'CogniSAGE Care',
          theme: myTheme,
          initialRoute: 'home',
          locale: localeProvider.locale,
          routes: {
            'home': (_) => const HomeScreen(),
            'form': (_) => const FormScreen(),
            'test': (_) => const TestScreen(),
            'instructions': (_) => const TestInstructionsScreen(),
            'personal': (_) => const PersonalInformationScreen(),
            'login': (_) => LoginScreen(),
            'register': (_) => RegisterScreen(),
            'user_info': (_) => const UserInfoScreen(),
            'all_games': (_) => const AllGamesScreen(),
            'matching_instructions': (_) =>
                const MatchingCardsInstructionsScreen(),
            'matching_cards': (_) => const MatchingCardsScreen(),
            'guess_word': (_) => const GuessTheWordScreen(),
            'math': (_) => const MathExerciseScreen(),
          },
          localizationsDelegates: const [
            S.delegate,
            GlobalMaterialLocalizations.delegate,
            GlobalWidgetsLocalizations.delegate,
            GlobalCupertinoLocalizations.delegate,
          ],
          supportedLocales: S.delegate.supportedLocales,
        ),
      );
    });
  }
}
